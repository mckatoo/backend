services:

  postgres:
    container_name: postgres
    image: postgres:14-alpine
    restart: on-failure:3
    volumes:
      - ./db/init.sql:/db/scripts/init.sql
      - ./db/init-db.sh:/docker-entrypoint-initdb.d/init-db.sh
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DBNAME}
      ENVSCHEMA: ${ENVSCHEMA}
    ports:
      - 5432:5432
  
  adminer:
    container_name: adminer
    image: adminer
    restart: on-failure:3
    links:
      - postgres
    ports:
      - ${ADMINER_PORT}:8080
    environment:
      ADMINER_DEFAULT_SERVER: postgres

  backend:
    container_name: backend
    image: node:alpine
    user: node
    working_dir: /home/node/app
    restart: on-failure:3
    links:
      - postgres:postgres
    ports:
      - ${PORT}:${PORT}
    volumes:
      - ./:/home/node/app
    environment:
      PORT: ${PORT}
      POSTGRES_HOSTNAME: postgres
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DBNAME: ${POSTGRES_DBNAME}
      ADMINER_PORT: ${ADMINER_PORT}
      PRIVATE_KEY: ${PRIVATE_KEY}
      REFRESH_PRIVATE_KEY: ${REFRESH_PRIVATE_KEY}
      CLOUDINARY_APIKEY: ${CLOUDINARY_APIKEY}
      CLOUDINARY_APISECRET: ${CLOUDINARY_APISECRET}
      CLOUDINARY_CLOUDNAME: ${CLOUDINARY_CLOUDNAME}
      CLOUDINARY_FOLDER: ${CLOUDINARY_FOLDER}
      CLOUDINARY_URL: ${CLOUDINARY_URL}
      SMTP_PASSWORD: ${SMTP_PASSWORD}
      SMTP_SECURE: ${SMTP_SECURE}
      SMTP_SERVER_ADDRESS: ${SMTP_SERVER_ADDRESS}
      SMTP_SERVER_PORT: ${SMTP_SERVER_PORT}
      SMTP_USERNAME: ${SMTP_USERNAME}
    command: npm run start:dev
